{
	"info": {
		"_postman_id": "afcee1f0-6fbe-4fef-8364-dc266380bdaa",
		"name": "AI YouTube Summary",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19458867"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noah@noahjanzen.com\",\n    \"password\": \"P@ssw0rt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/register",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "resend confirmation link",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noah@noahjanzen.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/resend-confirmation-link",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"resend-confirmation-link"
							]
						}
					},
					"response": []
				},
				{
					"name": "confirm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"6478ebc9ed240ad5cd345138\",\n    \"confirmationToken\": \"c0323bcb-281b-477b-ad1b-e3c3036bcea8\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/confirm",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Store access token in collection variable\", function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (jsonData && jsonData.data && jsonData.data.accessToken) {",
									"        pm.collectionVariables.set(\"accessToken\", jsonData.data.accessToken);",
									"        console.log(\"Access token stored successfully\");",
									"    } else {",
									"        console.log(\"Failed to store access token\");",
									"    }",
									"});",
									"",
									"pm.test(\"Store refresh token in collection variable\", function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (jsonData && jsonData.data && jsonData.data.refreshToken) {",
									"        pm.collectionVariables.set(\"refreshToken\", jsonData.data.refreshToken);",
									"        console.log(\"Refresh token stored successfully\");",
									"    } else {",
									"        console.log(\"Failed to store refresh token\");",
									"    }",
									"});",
									"",
									"pm.test(\"Extract userId from JWT and store in Postman variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData && jsonData.data && jsonData.data.accessToken) {",
									"        var base64Url = jsonData.data.accessToken.split('.')[1];",
									"        var base64 = base64Url.replace('-', '+').replace('_', '/');",
									"        var tokenPayload = JSON.parse(atob(base64));",
									"        pm.collectionVariables.set(\"userId\", tokenPayload.sub); ",
									"    } else {",
									"        console.log(\"Failed to extract userId\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noah@noahjanzen.com\",\n    \"password\": \"P@ssw0rt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/login",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "request password reset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noah@noahjanzen.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/request-password-reset",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"request-password-reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"64787c393098487c00943432\",\n    \"passwordResetToken\": \"0adb6236-9669-4e42-bde0-1a1877cd4abc\",\n    \"newPassword\": \"P@ssw0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/reset-password",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/logout",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Store access token in collection variable\", function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (jsonData && jsonData.data && jsonData.data.accessToken) {",
									"        pm.collectionVariables.set(\"accessToken\", jsonData.data.accessToken);",
									"        console.log(\"Access token stored successfully\");",
									"    } else {",
									"        console.log(\"Failed to store access token\");",
									"    }",
									"});",
									"",
									"pm.test(\"Store refresh token in collection variable\", function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (jsonData && jsonData.data && jsonData.data.refreshToken) {",
									"        pm.collectionVariables.set(\"refreshToken\", jsonData.data.refreshToken);",
									"        console.log(\"Refresh token stored successfully\");",
									"    } else {",
									"        console.log(\"Failed to store refresh token\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{refreshToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BACKEND_HOST}}/auth/refresh",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "add video",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ytVideoUrl\": \"https://www.youtube.com/watch?v=eikeGLYlzls\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BACKEND_HOST}}/users/:userId/videos",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"users",
								":userId",
								"videos"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get videos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BACKEND_HOST}}/users/:userId/videos",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"users",
								":userId",
								"videos"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "videos",
			"item": [
				{
					"name": "get video",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BACKEND_HOST}}/videos/:ytVideoId",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"videos",
								":ytVideoId"
							],
							"variable": [
								{
									"key": "ytVideoId",
									"value": "eikeGLYlzls"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "is valid yt video url",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BACKEND_HOST}}/youtube/is-video-url?&url=https://www.youtube.com/watch?v=eikeGLYlzls",
							"host": [
								"{{BACKEND_HOST}}"
							],
							"path": [
								"youtube",
								"is-video-url"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "url",
									"value": "https://www.youtube.com/watch?v=eikeGLYlzls"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BACKEND_HOST",
			"value": "http://localhost:4000",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}